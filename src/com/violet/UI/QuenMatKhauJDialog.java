/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.violet.UI;

import com.violet.DAO.NhanVienDAO;
import com.violet.Entity.NhanVien;
import com.violet.Help.Auth;
import com.violet.Help.MsgBox;
import java.net.PasswordAuthentication;
import java.util.Properties;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class QuenMatKhauJDialog extends javax.swing.JDialog {

    /**
     * Creates new form QuenMatKhauJDialog
     */
    public QuenMatKhauJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pblBackground = new javax.swing.JPanel();
        lblTaiKhoan = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        lblTaiKhoan1 = new javax.swing.JLabel();
        txtMaXacNhan = new javax.swing.JTextField();
        lblMatKhau = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JPasswordField();
        lblXacNhanMatKhau = new javax.swing.JLabel();
        txtMatKhau2 = new javax.swing.JPasswordField();
        btnDoiMatKhau = new com.violet.UI.Button();
        btnMaXacNhan = new com.violet.UI.Button();
        btnThoat = new com.violet.UI.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pblBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblTaiKhoan.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblTaiKhoan.setText("Tài khoản:");
        lblTaiKhoan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtTaiKhoan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTaiKhoan1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblTaiKhoan1.setText("Mã xác nhận:");
        lblTaiKhoan1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMaXacNhan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblMatKhau.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblMatKhau.setText("Mật Khẩu mới:");
        lblMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblXacNhanMatKhau.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblXacNhanMatKhau.setText("Xác nhận Mật Khẩu:");
        lblXacNhanMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMatKhau2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnDoiMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/DangKi.png"))); // NOI18N
        btnDoiMatKhau.setText("Đổi Mật Khẩu");
        btnDoiMatKhau.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhauActionPerformed(evt);
            }
        });

        btnMaXacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/login.png"))); // NOI18N
        btnMaXacNhan.setText("Lấy Mã");
        btnMaXacNhan.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnMaXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaXacNhanActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/Thoat.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pblBackgroundLayout = new javax.swing.GroupLayout(pblBackground);
        pblBackground.setLayout(pblBackgroundLayout);
        pblBackgroundLayout.setHorizontalGroup(
            pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pblBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblXacNhanMatKhau)
                    .addComponent(lblMatKhau)
                    .addComponent(lblTaiKhoan1)
                    .addComponent(lblTaiKhoan)
                    .addComponent(btnDoiMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pblBackgroundLayout.createSequentialGroup()
                        .addComponent(btnMaXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                        .addComponent(txtMaXacNhan)
                        .addComponent(txtMatKhau)
                        .addComponent(txtMatKhau2)))
                .addContainerGap())
        );
        pblBackgroundLayout.setVerticalGroup(
            pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pblBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaiKhoan)
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaiKhoan1)
                    .addComponent(txtMaXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatKhau)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblXacNhanMatKhau)
                    .addComponent(txtMatKhau2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(pblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMaXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pblBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pblBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhauActionPerformed
        doiMatKhau();
    }//GEN-LAST:event_btnDoiMatKhauActionPerformed

    private void btnMaXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaXacNhanActionPerformed
        QuenPass();        
    }//GEN-LAST:event_btnMaXacNhanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuenMatKhauJDialog dialog = new QuenMatKhauJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.violet.UI.Button btnDoiMatKhau;
    private com.violet.UI.Button btnMaXacNhan;
    private com.violet.UI.Button btnThoat;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblTaiKhoan;
    private javax.swing.JLabel lblTaiKhoan1;
    private javax.swing.JLabel lblXacNhanMatKhau;
    private javax.swing.JPanel pblBackground;
    private javax.swing.JTextField txtMaXacNhan;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JPasswordField txtMatKhau2;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
    NhanVienDAO dao = new NhanVienDAO();
    Random generator = new Random();
    int value = 0;
    private void doiMatKhau(){
        String manv = txtTaiKhoan.getText();
        //String matKhau = new String(txtMatKhau.getPassword());
        String matKhauMoi = new String(txtMatKhau.getPassword());
        String matKhauMoi2 = new String(txtMatKhau2.getPassword());
        if(!manv.equalsIgnoreCase(Auth.user.getMaNV())){
            MsgBox.alert(this, "Sai tên đăng nhập !");
        }else if(!matKhauMoi.equals(matKhauMoi2)){
            MsgBox.alert(this, "Xác nhận mật khẩu không đúng !");
        }else if(!txtMaXacNhan.getText().equals(String.valueOf(value))){
            MsgBox.alert(this, "Sai mã xác nhận !");
        }else{
            Auth.user.setMatKhau(matKhauMoi);
            dao.update(Auth.user);
            MsgBox.alert(this, "Đổi mật khẩu thành công !");
        }
    }
    private void QuenPass(){
        value = generator.nextInt((9999-1000)+ 1)+1000;
        String manvdn = txtTaiKhoan.getText();
        NhanVien nhanVien = dao.selectById(manvdn);
        if(nhanVien == null){
            MsgBox.alert(this,"Sai tên đăng nhập!");
            return;
        }
        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            //-----
            final String accountName = "bangphin1@gmail.com"; 
            final String accountPassword = "dl01869182991";  
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                        protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                            return new javax.mail.PasswordAuthentication(accountName, accountPassword); 
                        }
                    });
            //-----------
            NhanVien nhanVienTam = dao.selectById(txtTaiKhoan.getText());
            String from = "bangphin1@gmail.com"; 
            //String to = MsgBox.prompt(this,"Mời nhập Email địa chỉ mail của bạn để nhận mật khẩu");  
            String to = nhanVienTam.getEmail().toString().trim();
            String subject = "Mã xác nhận"; 
            String body = "Mã xác nhận của bạn là: " + String.valueOf(value); 
            //-----------
            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject);
            msg.setText(body);
            //-----------
            Transport.send(msg);          
            JOptionPane.showMessageDialog(null, "Mã xác nhận đã được gửi đến Email của bạn !", "Message", 
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (MessagingException ex) {
            ex.printStackTrace();
        } 
    }
    private void gui() throws AddressException, MessagingException{
        Properties pro = new Properties();
        pro.put("mail.smtp.auth", "true");
        pro.put("mail.smtp.starttls.enable","true");
        pro.put("mail.smtp.host","smtp.gmail.com");
        pro.put("mail.smtp.port", 587);
        
        Session s = Session.getInstance(pro,
                new javax.mail.Authenticator() {
            @Override
            protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                return new javax.mail.PasswordAuthentication("", "");
            }
        });
        
        Message mg = new MimeMessage(s);
        mg.setFrom(new InternetAddress("bangphin1@gmail.com"));
        mg.setRecipients(Message.RecipientType.TO, InternetAddress.parse("bangphin1@gmail.com"));
        mg.setSubject("Tieu de");
        mg.setText("Noi dung");
        
        Transport.send(mg);
    }
    
    private void gui2(){
        try {
            Properties pro = new Properties();
            pro.put("mail.smtp.auth", "true");
            pro.put("mail.smtp.starttls.enable", "true");
            pro.put("mail.smtp.host", "smtp.gmail.com");
            pro.put("mail.smtp.port", 587);
            
            Session se = Session.getInstance(pro, new javax.mail.Authenticator() {
                @Override
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    return new javax.mail.PasswordAuthentication("bangphin1@gmail.com", ""); //To change body of generated methods, choose Tools | Templates.
                }                              
            });
            
            Message ms = new MimeMessage(se);
            ms.setFrom(new InternetAddress("bangphin1@gmail.com"));
            ms.setRecipients(Message.RecipientType.TO, InternetAddress.parse("bangphin1@gmail.com"));
            ms.setSubject("Tiêu đề");
            ms.setText("Nội dung");
            
            Transport.send(ms);
                    
        } catch (Exception e) {
        }
    }
}
