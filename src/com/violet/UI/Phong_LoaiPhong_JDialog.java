/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.violet.UI;

import com.violet.DAO.LoaiPhongDAO;
import com.violet.DAO.PhongDAO;
import com.violet.Entity.LoaiPhong;
import com.violet.Entity.Phong;
import com.violet.Help.Auth;
import com.violet.Help.HeaderColor;
import com.violet.Help.MsgBox;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Phong_LoaiPhong_JDialog extends javax.swing.JDialog {

    /**
     * Creates new form Phong_DatPhong_JDialog
     */
    public Phong_LoaiPhong_JDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlPhong = new javax.swing.JPanel();
        lblMaPhong = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        lblMaPhong1 = new javax.swing.JLabel();
        txtTenPhong = new javax.swing.JTextField();
        lblDonGia = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        lblMaLoai = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhong = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnThem = new com.violet.UI.Button();
        btnCapNhat = new com.violet.UI.Button();
        btnXoa = new com.violet.UI.Button();
        btnMoi = new com.violet.UI.Button();
        btnFirst = new com.violet.UI.Button();
        btnPrev = new com.violet.UI.Button();
        btnNext = new com.violet.UI.Button();
        btnLast = new com.violet.UI.Button();
        cboMaLoai = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        lblMaLoaiPhong = new javax.swing.JLabel();
        txtMaLoai = new javax.swing.JTextField();
        lblTenLoai = new javax.swing.JLabel();
        txtTenLoai = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLoaiPhong = new javax.swing.JTable();
        btnThem1 = new com.violet.UI.Button();
        btnCapNhat1 = new com.violet.UI.Button();
        btnXoa1 = new com.violet.UI.Button();
        btnMoi1 = new com.violet.UI.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Violet - Phòng - Đặt Phòng");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(32, 136, 203));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("Phòng - Đặt Phòng");
        lblTieuDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(32, 136, 203), 10));

        tabs.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        pnlPhong.setBackground(new java.awt.Color(204, 255, 255));

        lblMaPhong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMaPhong.setText("Mã Phòng:");
        lblMaPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMaPhong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblMaPhong1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMaPhong1.setText("Tên Phòng:");
        lblMaPhong1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtTenPhong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblDonGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDonGia.setText("Đơn giá:");
        lblDonGia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtDonGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDonGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDonGiaKeyReleased(evt);
            }
        });

        lblMaLoai.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMaLoai.setText("Mã loại:");
        lblMaLoai.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        tblPhong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Đơn Giá", "Mã Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhong.setRowHeight(30);
        tblPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhong);

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(0, 255, 255));
        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/TimKiemIcon.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setColor1(new java.awt.Color(198, 232, 254));
        btnThem.setColor2(new java.awt.Color(53, 65, 152));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/update.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setColor1(new java.awt.Color(198, 232, 254));
        btnCapNhat.setColor2(new java.awt.Color(53, 65, 152));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setColor1(new java.awt.Color(198, 232, 254));
        btnXoa.setColor2(new java.awt.Color(53, 65, 152));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/new.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setColor1(new java.awt.Color(198, 232, 254));
        btnMoi.setColor2(new java.awt.Color(53, 65, 152));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.setColor1(new java.awt.Color(26, 239, 246));
        btnFirst.setColor2(new java.awt.Color(67, 29, 245));
        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.setColor1(new java.awt.Color(26, 239, 246));
        btnPrev.setColor2(new java.awt.Color(67, 29, 245));
        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.setColor1(new java.awt.Color(26, 239, 246));
        btnNext.setColor2(new java.awt.Color(67, 29, 245));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.setColor1(new java.awt.Color(26, 239, 246));
        btnLast.setColor2(new java.awt.Color(67, 29, 245));
        btnLast.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        cboMaLoai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlPhongLayout = new javax.swing.GroupLayout(pnlPhong);
        pnlPhong.setLayout(pnlPhongLayout);
        pnlPhongLayout.setHorizontalGroup(
            pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlPhongLayout.createSequentialGroup()
                        .addComponent(lblMaPhong)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaPhong))
                    .addGroup(pnlPhongLayout.createSequentialGroup()
                        .addComponent(lblMaPhong1)
                        .addGap(12, 12, 12)
                        .addComponent(txtTenPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
                    .addGroup(pnlPhongLayout.createSequentialGroup()
                        .addComponent(lblDonGia)
                        .addGap(34, 34, 34)
                        .addComponent(txtDonGia, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPhongLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPhongLayout.createSequentialGroup()
                        .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPhongLayout.createSequentialGroup()
                                .addComponent(lblMaLoai)
                                .addGap(40, 40, 40)
                                .addComponent(cboMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPhongLayout.createSequentialGroup()
                                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlPhongLayout.createSequentialGroup()
                                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(16, 16, 16)
                                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTimKiem)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlPhongLayout.setVerticalGroup(
            pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaPhong)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaPhong1)
                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonGia)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaLoai)
                    .addComponent(cboMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimKiem)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabs.addTab("Phòng", new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/PhongTab.png")), pnlPhong); // NOI18N

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        lblMaLoaiPhong.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblMaLoaiPhong.setText("Mã loại:");
        lblMaLoaiPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtMaLoai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTenLoai.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblTenLoai.setText("Tên loại:");
        lblTenLoai.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtTenLoai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tblLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblLoaiPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Loại", "Tên Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLoaiPhong.setRowHeight(30);
        tblLoaiPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiPhongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLoaiPhong);

        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/add.png"))); // NOI18N
        btnThem1.setText("Thêm");
        btnThem1.setColor1(new java.awt.Color(131, 193, 233));
        btnThem1.setColor2(new java.awt.Color(178, 22, 178));
        btnThem1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnCapNhat1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/update.png"))); // NOI18N
        btnCapNhat1.setText("Cập nhật");
        btnCapNhat1.setColor1(new java.awt.Color(131, 193, 233));
        btnCapNhat1.setColor2(new java.awt.Color(178, 22, 178));
        btnCapNhat1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCapNhat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhat1ActionPerformed(evt);
            }
        });

        btnXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/delete.png"))); // NOI18N
        btnXoa1.setText("Xóa");
        btnXoa1.setColor1(new java.awt.Color(131, 193, 233));
        btnXoa1.setColor2(new java.awt.Color(178, 22, 178));
        btnXoa1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnMoi1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/new.png"))); // NOI18N
        btnMoi1.setText("Mới");
        btnMoi1.setColor1(new java.awt.Color(131, 193, 233));
        btnMoi1.setColor2(new java.awt.Color(178, 22, 178));
        btnMoi1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblMaLoaiPhong)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblTenLoai)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCapNhat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMoi1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaLoaiPhong)
                    .addComponent(txtMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenLoai)
                    .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCapNhat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnMoi1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabs.addTab("Loại Phòng", new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/LoaiPhongTab.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền Thêm Phòng !");
            return;
        }
        if(validateP() == false){
            return;
        }
        insertPhong();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền Cập Nhật Phòng !");
            return;
        }
        if(validateP() == false){
            return;
        }
        updatePhong();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền Xóa Phòng !");
            return;
        }
        if(Auth.isReceptionist()){
            MsgBox.alert(this, "Lễ Tân không có quyền xóa Phòng !");
        }
        deletePhong();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearFormPhong();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhongMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            this.row = tblPhong.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblPhongMouseClicked

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền thêm loại phòng !");
            return;
        }
        if(validateLP()==false){
            return;
        }
        insertLoaiPhong();
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnCapNhat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhat1ActionPerformed
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền cập nhật loại phòng !");
            return;
        }
        if(validateLP()==false){
            return;
        }        
        updateLoaiPhong();
    }//GEN-LAST:event_btnCapNhat1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:    
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền xóa loại phòng !");
            return;
        }
        if(Auth.isReceptionist()){
            MsgBox.alert(this, "Lễ tân không có quyên xóa loại phòng !");
        }
        deleteLoaiPhong();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoi1ActionPerformed
        // TODO add your handling code here:
        clearFormLoaiPhong();
    }//GEN-LAST:event_btnMoi1ActionPerformed

    private void tblLoaiPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiPhongMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            this.row2 = tblLoaiPhong.getSelectedRow();
            this.edit2();
        }
    }//GEN-LAST:event_tblLoaiPhongMouseClicked

    private void txtDonGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDonGiaKeyReleased
        // TODO add your handling code here:
        ChuyenDang();
    }//GEN-LAST:event_txtDonGiaKeyReleased

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        fillTablePhong();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Phong_LoaiPhong_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Phong_LoaiPhong_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Phong_LoaiPhong_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Phong_LoaiPhong_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Phong_LoaiPhong_JDialog dialog = new Phong_LoaiPhong_JDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.violet.UI.Button btnCapNhat;
    private com.violet.UI.Button btnCapNhat1;
    private com.violet.UI.Button btnFirst;
    private com.violet.UI.Button btnLast;
    private com.violet.UI.Button btnMoi;
    private com.violet.UI.Button btnMoi1;
    private com.violet.UI.Button btnNext;
    private com.violet.UI.Button btnPrev;
    private com.violet.UI.Button btnThem;
    private com.violet.UI.Button btnThem1;
    private javax.swing.JButton btnTimKiem;
    private com.violet.UI.Button btnXoa;
    private com.violet.UI.Button btnXoa1;
    private javax.swing.JComboBox<String> cboMaLoai;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblMaLoai;
    private javax.swing.JLabel lblMaLoaiPhong;
    private javax.swing.JLabel lblMaPhong;
    private javax.swing.JLabel lblMaPhong1;
    private javax.swing.JLabel lblTenLoai;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JPanel pnlPhong;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblLoaiPhong;
    private javax.swing.JTable tblPhong;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaLoai;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtTenLoai;
    private javax.swing.JTextField txtTenPhong;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
    
    PhongDAO pdao = new PhongDAO();
    LoaiPhongDAO lpdao = new LoaiPhongDAO();
    int row = -1;
    int row2 = -1;
    
    private void init(){
        this.setLocationRelativeTo(null);
        tblPhong.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblPhong.getParent().setBackground(Color.WHITE);
        tblPhong.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblPhong.setAutoCreateRowSorter(true);
        
        tblLoaiPhong.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblLoaiPhong.getParent().setBackground(Color.WHITE);
        tblLoaiPhong.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblLoaiPhong.setAutoCreateRowSorter(true);
        
        fillCombobox();
        fillTablePhong();
        fillTableLoaiPhong();
        this.clearFormPhong();
        this.clearFormLoaiPhong();
    }
    
    private void fillCombobox(){
        cboMaLoai.removeAllItems();
        for(int i = 0; i < lpdao.selectMaLoai().size();i++){
            cboMaLoai.addItem(lpdao.selectMaLoai().get(i));
        }
    }
    
    private void fillTablePhong() {
        DefaultTableModel model = (DefaultTableModel) tblPhong.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            List<Phong> list = pdao.selectByKeyword(keyword);
            DecimalFormat format = new DecimalFormat("###,###,###");
            for (Phong p : list) {
                Object[] row = {
                    p.getMaPhong(),
                    p.getTenPhong(),
                    format.format(p.getDonGia()),
                    p.getMaLoai()
                };
                model.addRow(row);
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
    
    private void fillTableLoaiPhong() {
        DefaultTableModel model = (DefaultTableModel) tblLoaiPhong.getModel();
        model.setRowCount(0);
        try {
            List<LoaiPhong> list = lpdao.selectAll();
            for (LoaiPhong lp : list) {
                Object[] row = {
                    lp.getMaLoai(),
                    lp.getTenLoai()
                };
                model.addRow(row);
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    
    private void setFormPhong(Phong p){
        txtMaPhong.setText(String.valueOf(p.getMaPhong()));
        txtTenPhong.setText(p.getTenPhong());
        DecimalFormat format = new DecimalFormat("###,###,###");
        txtDonGia.setText(new String(format.format(p.getDonGia())));
        cboMaLoai.setSelectedItem(String.valueOf(p.getMaLoai()));
    }
    
    private Phong getFormPhong(){
        Phong p = new Phong();
        p.setMaPhong(Integer.valueOf(txtMaPhong.getText()));
        p.setTenPhong(txtTenPhong.getText());
        p.setDonGia(Double.valueOf(chuyenlai(txtDonGia.getText())));
        p.setMaLoai((String) cboMaLoai.getSelectedItem());
        return p;
    }
    
    private void insertPhong(){
        Phong p = getFormPhong();
        try {
            pdao.insert(p);
            this.fillTablePhong();
            this.clearFormPhong();
            MsgBox.alert(this, "Thêm mới thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
    }
    
    private void updatePhong(){
        Phong p = getFormPhong();
        try {
            pdao.update(p);
            this.fillTablePhong();
            this.clearFormPhong();
            MsgBox.alert(this, "Cập nhật thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
    
    private void deletePhong(){
        Integer mp = Integer.valueOf(txtMaPhong.getText());
        try {
            pdao.delete(mp);
            this.fillTablePhong();
            this.clearFormPhong();
            MsgBox.alert(this, "Xóa thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }
    }
    
    private void clearFormPhong(){
        Phong p = new Phong();
        this.setFormPhong(p);
        this.row = -1;
        this.fillTablePhong();
        this.updateStatus();
    }
    
    private void edit(){
        Integer mp = (Integer) tblPhong.getValueAt(this.row, 0);
        tblPhong.setRowSelectionInterval(this.row, this.row);
        Phong p = pdao.selectById(mp);
        this.setFormPhong(p);
        this.updateStatus();
        //tabs.setSelectedIndex(0);
    }
    
    private void edit2(){
        String ml = (String) tblLoaiPhong.getValueAt(this.row2, 0);
        tblLoaiPhong.setRowSelectionInterval(this.row2, this.row2);
        LoaiPhong lp = lpdao.selectById(ml);
        this.setFormLoaiPhong(lp);
        this.updateStatus2();
        //tabs.setSelectedIndex(1);
    }
    
    private void first(){
        this.row = 0;
        this.edit();
    }
    
    private void prev(){
        if(this.row > 0){
            this.row--;
            this.edit();
        }
    }
    
    private void next(){
        if(this.row < tblPhong.getRowCount() - 1){
            this.row++;
            this.edit();
        }
    }
    
    private void last(){
        this.row = tblPhong.getRowCount() - 1;
        this.edit();
    }
    
    
    
    private void setFormLoaiPhong(LoaiPhong lp){
        txtMaLoai.setText(lp.getMaLoai());
        txtTenLoai.setText(lp.getTenLoai());
    }
    
    private LoaiPhong getFormLoaiPhong(){
        LoaiPhong lp = new LoaiPhong();
        lp.setMaLoai(txtMaLoai.getText());
        lp.setTenLoai(txtTenLoai.getText());
        return lp;
    }
    
    
    private void insertLoaiPhong(){
        LoaiPhong lp = getFormLoaiPhong();
        try {
            lpdao.insert(lp);
            this.fillTableLoaiPhong();
            this.clearFormLoaiPhong();
            MsgBox.alert(this, "Thêm mới thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
    }
    
    private void updateLoaiPhong(){
        LoaiPhong lp = getFormLoaiPhong();
        try {
            lpdao.update(lp);
            this.fillTableLoaiPhong();
            this.clearFormLoaiPhong();
            MsgBox.alert(this, "Cập nhật thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
    
    private void deleteLoaiPhong(){
        String ml = txtMaLoai.getText();
        try {
            lpdao.delete(ml);
            this.fillTableLoaiPhong();
            this.clearFormLoaiPhong();
            MsgBox.alert(this, "Xóa thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }
    }
    
    private void clearFormLoaiPhong(){
        LoaiPhong lp = new LoaiPhong();
        this.setFormLoaiPhong(lp);
        this.row2 = -1;
        this.updateStatus2();
    }
    
    private void updateStatus(){
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row >= tblPhong.getRowCount() - 1);

        txtMaPhong.setEditable(false);
        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
    
    private void updateStatus2(){
        boolean edit = (this.row2 >= 0);

        txtMaLoai.setEditable(!edit);
        btnThem1.setEnabled(!edit);
        btnCapNhat1.setEnabled(edit);
        btnXoa1.setEnabled(edit);
    }
    private void ChuyenDang(){
        if(txtDonGia.getText().equals("")){
            return;
        }
        try {
            String thanhtoan = txtDonGia.getText();
            String giadd = thanhtoan.replace(",", "");
            DecimalFormat format = new DecimalFormat("###,###,###");
            String so = format.format(Long.parseLong(giadd));
            txtDonGia.setText(so);
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Chỉ nhập số !");
        }
    }
    private String chuyenlai(String txtdongia){
        try {
            String gia = txtdongia;
            String giadd = gia.replace(",", "");
            return giadd;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public boolean validateP() {
        try {
            Integer maphong = Integer.valueOf(txtMaPhong.getText());
            if(maphong < 0){
                throw new Exception();
            }
        } catch (Exception e) {
            e.printStackTrace();
            txtMaPhong.requestFocus();
            MsgBox.alert(this, "Không được nhập chữ vào ô này hoặc số âm vào ô này !");
            return false;
        }
        if (txtTenPhong.getText().trim().length() == 0) {
            MsgBox.alert(this, "Không được để trống tên phòng!\nVí dụ: Phòng 000");
            txtTenPhong.requestFocus();
            return false;
        }
        return true;
    }
    public boolean validateLP() {
        String test = "^(L)[0-9]{3}";
        if (!txtMaLoai.getText().matches(test)) {
            JOptionPane.showMessageDialog(this, "Không được nhập sai định dạng !\nVí dụ: L001");
            txtMaLoai.requestFocus();
            return false;
        }
        if (txtTenLoai.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống tên loại phòng!\nVí dụ: Phòng đơn");
            txtTenLoai.requestFocus();
            return false;
        }
        return true;
    }
}
