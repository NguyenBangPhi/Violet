/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.violet.UI;

import com.violet.DAO.ChiTietDichVuDAO;
import com.violet.DAO.DichVuDAO;
import com.violet.DAO.HoaDonThanhToanPhongDAO;
import com.violet.Entity.ChiTietDichVu;
import com.violet.Entity.DichVu;
import com.violet.Entity.HoaDonThanhToanPhong;
import com.violet.Help.HeaderColor;
import com.violet.Help.MsgBox;
import com.violet.Help.ThongTinNhanh;
import java.awt.Color;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QuanLiDangKiDVJDialog extends javax.swing.JDialog {

    /**
     * Creates new form QuanLiDangKiDVJDialog
     */
    public QuanLiDangKiDVJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pblBackGround = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDichVu = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDVDaDK = new javax.swing.JTable();
        lblTieuDe = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboMaHDP = new javax.swing.JComboBox<>();
        btnDangKi = new com.violet.UI.Button();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDVMuonDK = new javax.swing.JTable();
        lblDichVuDaDK = new javax.swing.JLabel();
        lblDichVuMuonDK1 = new javax.swing.JLabel();
        btnload = new com.violet.UI.Button();
        btnXoa = new com.violet.UI.Button();
        btnLoadHDMoiNhat = new com.violet.UI.Button();
        lblTongTien2 = new javax.swing.JLabel();
        txtTongTien2 = new javax.swing.JTextField();
        lblTongTien1 = new javax.swing.JLabel();
        txtTongTien1 = new javax.swing.JTextField();
        btnclear = new com.violet.UI.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pblBackGround.setBackground(new java.awt.Color(255, 255, 255));

        tblDichVu.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        tblDichVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã DV", "Tên DV", "Mô Tả", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDichVu.setRowHeight(30);
        tblDichVu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDichVu);

        tblDVDaDK.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblDVDaDK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MaDV", "TenDV", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDVDaDK.setRowHeight(30);
        jScrollPane2.setViewportView(tblDVDaDK);

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 3, 32)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(32, 136, 203));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("Đăng Kí Dịch Vụ");
        lblTieuDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(32, 136, 203), 10));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel1.setText("Mã HDTT Phòng:");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btnDangKi.setText("Đăng kí");
        btnDangKi.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        tblDVMuonDK.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblDVMuonDK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MaDV", "TenDV", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDVMuonDK.setRowHeight(30);
        tblDVMuonDK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDVMuonDKMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDVMuonDK);

        lblDichVuDaDK.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblDichVuDaDK.setText("Dịch vụ đã đăng kí:");

        lblDichVuMuonDK1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblDichVuMuonDK1.setText("Dịch vụ muốn đăng kí:");

        btnload.setText("Load");
        btnload.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloadActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLoadHDMoiNhat.setText("...");
        btnLoadHDMoiNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadHDMoiNhatActionPerformed(evt);
            }
        });

        lblTongTien2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblTongTien2.setText("Tổng Tiền:");

        txtTongTien2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTongTien1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblTongTien1.setText("Tổng Tiền:");

        txtTongTien1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnclear.setText("Clear");
        btnclear.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pblBackGroundLayout = new javax.swing.GroupLayout(pblBackGround);
        pblBackGround.setLayout(pblBackGroundLayout);
        pblBackGroundLayout.setHorizontalGroup(
            pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pblBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(pblBackGroundLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(cboMaHDP, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnLoadHDMoiNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pblBackGroundLayout.createSequentialGroup()
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pblBackGroundLayout.createSequentialGroup()
                                .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblDichVuDaDK)
                            .addGroup(pblBackGroundLayout.createSequentialGroup()
                                .addComponent(lblDichVuMuonDK1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pblBackGroundLayout.createSequentialGroup()
                        .addComponent(lblTongTien2)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongTien2))
                    .addGroup(pblBackGroundLayout.createSequentialGroup()
                        .addComponent(lblTongTien1)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongTien1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pblBackGroundLayout.setVerticalGroup(
            pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pblBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pblBackGroundLayout.createSequentialGroup()
                        .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cboMaHDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoadHDMoiNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDichVuDaDK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTongTien1)
                            .addComponent(txtTongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDichVuMuonDK1)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pblBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTongTien2)
                            .addComponent(txtTongTien2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pblBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pblBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloadActionPerformed
        load();
    }//GEN-LAST:event_btnloadActionPerformed

    private void tblDichVuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            chonDichVu();
        }
    }//GEN-LAST:event_tblDichVuMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if(row2!=-1){
            DefaultTableModel model = (DefaultTableModel) tblDVMuonDK.getModel();
            model.removeRow(row2);
            int temp = 0;
            for(int i = 0; i < tblDVMuonDK.getRowCount();i++){
                temp += Integer.parseInt(chuyenlai(tblDVMuonDK.getValueAt(i, 2).toString()));
            }
            txtTongTien2.setText(String.valueOf(temp));
            ChuyenDang(txtTongTien2);
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblDVMuonDKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDVMuonDKMouseClicked
        // TODO add your handling code here:
        this.row2 = tblDVMuonDK.getSelectedRow();
    }//GEN-LAST:event_tblDVMuonDKMouseClicked

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnDangKiActionPerformed

    private void btnLoadHDMoiNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadHDMoiNhatActionPerformed
        // TODO add your handling code here:
        if(!ThongTinNhanh.checkHDTTP()){
            MsgBox.alert(null, "Chưa có thông tin Khách Hàng mới nhất !");
            return;
        }
        cboMaHDP.setSelectedItem(ThongTinNhanh.hdttp);
    }//GEN-LAST:event_btnLoadHDMoiNhatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLiDangKiDVJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLiDangKiDVJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLiDangKiDVJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLiDangKiDVJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLiDangKiDVJDialog dialog = new QuanLiDangKiDVJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.violet.UI.Button btnDangKi;
    private com.violet.UI.Button btnLoadHDMoiNhat;
    private com.violet.UI.Button btnXoa;
    private com.violet.UI.Button btnclear;
    private com.violet.UI.Button btnload;
    private javax.swing.JComboBox<String> cboMaHDP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDichVuDaDK;
    private javax.swing.JLabel lblDichVuMuonDK1;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTongTien1;
    private javax.swing.JLabel lblTongTien2;
    private javax.swing.JPanel pblBackGround;
    private javax.swing.JTable tblDVDaDK;
    private javax.swing.JTable tblDVMuonDK;
    private javax.swing.JTable tblDichVu;
    private javax.swing.JTextField txtTongTien1;
    private javax.swing.JTextField txtTongTien2;
    // End of variables declaration//GEN-END:variables

    private void init() {
        tblDichVu.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblDichVu.getParent().setBackground(Color.WHITE);
        tblDichVu.getTableHeader().setPreferredSize(new Dimension(40, 40));
        
        tblDVDaDK.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblDVDaDK.getParent().setBackground(Color.WHITE);
        tblDVDaDK.getTableHeader().setPreferredSize(new Dimension(40, 40));
        
        tblDVMuonDK.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblDVMuonDK.getParent().setBackground(Color.WHITE);
        tblDVMuonDK.getTableHeader().setPreferredSize(new Dimension(40, 40));
        
        fillCombobox();
        fillTableDV();
    }
    ChiTietDichVuDAO daoCTDV = new ChiTietDichVuDAO();
    HoaDonThanhToanPhongDAO dao = new HoaDonThanhToanPhongDAO();
    DichVuDAO dao2 = new DichVuDAO();
    int row = -1;
    int row2 = -1;
    private void fillCombobox(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaHDP.getModel();
        model.removeAllElements();
        List<HoaDonThanhToanPhong> list = dao.selectAll();
        for(HoaDonThanhToanPhong hd : list){
            model.addElement(hd);
        }
    }
    
    private void load(){      
        HoaDonThanhToanPhong p = (HoaDonThanhToanPhong) cboMaHDP.getSelectedItem();
        List<String> list = daoCTDV.selectDVdaDK(p.getMaHD());
        if(list==null){
            MsgBox.alert(this, "Hóa đơn này chưa đăng kí bất kì dịch vụ nào !");
            DefaultTableModel model = (DefaultTableModel) tblDVDaDK.getModel();
            model.setRowCount(0);
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblDVDaDK.getModel();
        model.setRowCount(0);
        List<Object[]> list2 = daoCTDV.selectDVDKtheoMaHDTTPhong(p.getMaHD());
        DecimalFormat format = new DecimalFormat("###,###,###");
        for(Object[] row : list2){
            model.addRow(new Object[]{row[0],row[1],format.format(row[2])}); 
        }
        int temp = 0;
        for(int i = 0; i < tblDVDaDK.getRowCount();i++){
            temp += Integer.parseInt(chuyenlai(tblDVDaDK.getValueAt(i, 2).toString()));
        }
        txtTongTien1.setText(String.valueOf(temp));
        ChuyenDang(txtTongTien1);
    }
    
    private void fillTableDV(){
        DefaultTableModel model = (DefaultTableModel) tblDichVu.getModel();
        model.setRowCount(0);
        try {
            List<DichVu> list = dao2.selectAll();
            DecimalFormat format = new DecimalFormat("###,###,###");
            for(DichVu dv : list){
                model.addRow(new Object[]{
                            dv.getMaDV(),dv.getTenDV(),dv.getMoTaChiTiet(),format.format(dv.getGia())
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int check = 0;
    private void chonDichVu(){
        
        this.row = tblDichVu.getSelectedRow();
        HoaDonThanhToanPhong hd = (HoaDonThanhToanPhong) cboMaHDP.getSelectedItem();
        if(daoCTDV.selectById(hd.getMaHD(), tblDichVu.getValueAt(row, 0).toString())!=null){
            MsgBox.alert(null, "Dịch vụ này đã được đăng kí !");
            return;
        }
        DefaultTableModel md =  (DefaultTableModel) tblDVMuonDK.getModel();
        if(md.getRowCount()>=1){
            if(md.getValueAt(0, 0)!=null){
            //if(tblDVMuonDK.getValueAt(0, 0)!=null){
                for(int i = 0;i < tblDVMuonDK.getRowCount();i++){
                    if(tblDichVu.getValueAt(row, 0).toString().equals(tblDVMuonDK.getValueAt(i, 0).toString())){
                        MsgBox.alert(null, "Dịch vụ này đã trong danh sách muốn đăng kí !");
                        return;
                    }
                }
            //}
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblDVMuonDK.getModel();
        if(check == 0){
            if(model.getValueAt(0, 0)==null){
                model.setRowCount(0);
            } 
        }
               
        model.addRow(new Object[]{tblDichVu.getValueAt(row, 0).toString(),tblDichVu.getValueAt(row, 1).toString(),tblDichVu.getValueAt(row, 3)});
        int temp = 0;
        for(int i = 0; i < tblDVMuonDK.getRowCount();i++){
            temp += Integer.parseInt(chuyenlai(tblDVMuonDK.getValueAt(i, 2).toString()));
        }
        txtTongTien2.setText(String.valueOf(temp));
        ChuyenDang(txtTongTien2);
        check++;
    }
    private void ChuyenDang(JTextField txt){
        if(txt.getText().equals("")){
            return;
        }
        try {
            String thanhtoan = txt.getText();
            String giadd = thanhtoan.replace(",", "");
            DecimalFormat format = new DecimalFormat("###,###,###");
            String so = format.format(Long.parseLong(giadd));
            txt.setText(so);
        } catch (Exception e) {
            //e.printStackTrace();
            MsgBox.alert(this, "Chỉ nhập số !");
        }
    }
    private String chuyenlai(String txtthanhtoan){
        try {
            String gia = txtthanhtoan;
            String giadd = gia.replace(",", "");
            return giadd;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    private void clear(){
        DefaultTableModel model = (DefaultTableModel) tblDVDaDK.getModel();
        model.setRowCount(0);
        DefaultTableModel model2 = (DefaultTableModel) tblDVMuonDK.getModel();
        model2.setRowCount(0);
        txtTongTien1.setText("");
        txtTongTien2.setText("");
    }
    private void insert(){
        try {
            for(int i = 0; i < tblDVMuonDK.getRowCount();i++){
                ChiTietDichVu ctdv = new ChiTietDichVu();
                HoaDonThanhToanPhong hd = (HoaDonThanhToanPhong) cboMaHDP.getSelectedItem();
                ctdv.setMaHD(hd.getMaHD());
                ctdv.setMaDV(tblDVMuonDK.getValueAt(i, 0).toString());
                daoCTDV.insert(ctdv);                              
                dao.updateTienThanhToan(ctdv.getMaHD(), dao.selectGiaDV(tblDVMuonDK.getValueAt(i, 0).toString()));
                //MsgBox.alert(this,String.valueOf(dao.selectGiaDV(madv[i].trim())));
            }
            MsgBox.alert(this, "Đăng Kí thành công !");
            clear();
            load();
            //reset();
        } catch (Exception e) {           
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi !");
        }       
    }
}
