/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.violet.UI;

import com.violet.DAO.ChiTietDichVuDAO;
import com.violet.DAO.HoaDonThanhToanPhongDAO;
import com.violet.DAO.KhachHangDAO;
import com.violet.DAO.NhanVienDAO;
import com.violet.DAO.PhongDAO;
import com.violet.Entity.ChiTietDichVu;
import com.violet.Entity.HoaDonThanhToanPhong;
import com.violet.Entity.KhachHang;
import com.violet.Entity.Phong;
import com.violet.Help.Auth;
import com.violet.Help.HeaderColor;
import com.violet.Help.MsgBox;
import com.violet.Help.ThongTinNhanh;
import com.violet.Help.XDate;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ThanhToanJDialog extends javax.swing.JDialog {

    /**
     * Creates new form ThanhToanJDialog
     */
    public ThanhToanJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        // 1400 600
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblNgayThue = new javax.swing.JLabel();
        lblTieuDe = new javax.swing.JLabel();
        dtcNgayThue = new com.toedter.calendar.JDateChooser();
        lblNgayTra = new javax.swing.JLabel();
        dtcNgayTra = new com.toedter.calendar.JDateChooser();
        lblTienThanhToan = new javax.swing.JLabel();
        txtThanhToan = new javax.swing.JTextField();
        lblDanhGia = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDanhGia = new javax.swing.JTextArea();
        lblMaPhong = new javax.swing.JLabel();
        cboMaPhong = new javax.swing.JComboBox<>();
        lblMaKH = new javax.swing.JLabel();
        cboMaKH = new javax.swing.JComboBox<>();
        lblMaNhanVien = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        lblMaNV = new javax.swing.JLabel();
        btnThem = new com.violet.UI.Button();
        btnCapNhat = new com.violet.UI.Button();
        btnXoa = new com.violet.UI.Button();
        btnMoi = new com.violet.UI.Button();
        btnFirst = new com.violet.UI.Button();
        btnPrev = new com.violet.UI.Button();
        btnNext = new com.violet.UI.Button();
        btnLast = new com.violet.UI.Button();
        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThanhToan = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHDDV = new javax.swing.JTable();
        btnPhong = new com.violet.UI.Button();
        btnKhachHang = new com.violet.UI.Button();
        btnReset = new com.violet.UI.Button();
        btnLoadThanhToan = new com.violet.UI.Button();
        btnDichVu = new com.violet.UI.Button();
        lblTienThanhToanPhong = new javax.swing.JLabel();
        txtThanhToanPhong = new javax.swing.JTextField();
        btnLoadTienThanhToanTong = new com.violet.UI.Button();
        btnHDDV = new com.violet.UI.Button();
        btnBill = new com.violet.UI.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Violet - Thanh Toán");

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblNgayThue.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblNgayThue.setText("Ngày Thuê:");
        lblNgayThue.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblTieuDe.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(32, 136, 203));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("Thanh Toán");
        lblTieuDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(32, 136, 203), 10));

        dtcNgayThue.setBackground(new java.awt.Color(255, 255, 255));
        dtcNgayThue.setDateFormatString("dd-MM-yyyy");

        lblNgayTra.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblNgayTra.setText("Ngày Trả:");
        lblNgayTra.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        dtcNgayTra.setBackground(new java.awt.Color(255, 255, 255));
        dtcNgayTra.setDateFormatString("dd-MM-yyyy");

        lblTienThanhToan.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblTienThanhToan.setText("Tiền Thanh Toán Tổng:");
        lblTienThanhToan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtThanhToan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtThanhToan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtThanhToanKeyReleased(evt);
            }
        });

        lblDanhGia.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblDanhGia.setText("Đánh Giá:");
        lblDanhGia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtDanhGia.setColumns(20);
        txtDanhGia.setRows(5);
        jScrollPane2.setViewportView(txtDanhGia);

        lblMaPhong.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblMaPhong.setText("Mã Phòng:");
        lblMaPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblMaKH.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblMaKH.setText("Mã KH:");
        lblMaKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblMaNhanVien.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblMaNhanVien.setText("Mã NV:");
        lblMaNhanVien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(0, 255, 255));
        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/TimKiemIcon.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");

        lblMaNV.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblMaNV.setText("MaNV");
        lblMaNV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setColor2(new java.awt.Color(204, 255, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/update.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.setColor2(new java.awt.Color(204, 255, 255));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setColor2(new java.awt.Color(204, 255, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/new.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setColor2(new java.awt.Color(204, 255, 255));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.setColor1(new java.awt.Color(26, 239, 246));
        btnFirst.setColor2(new java.awt.Color(67, 29, 245));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.setColor1(new java.awt.Color(26, 239, 246));
        btnPrev.setColor2(new java.awt.Color(67, 29, 245));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.setColor1(new java.awt.Color(26, 239, 246));
        btnNext.setColor2(new java.awt.Color(67, 29, 245));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.setColor1(new java.awt.Color(26, 239, 246));
        btnLast.setColor2(new java.awt.Color(67, 29, 245));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        tabs.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        tblThanhToan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblThanhToan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaHD", "Ngày Thuê", "Ngày Trả", "Tiền Thanh Toán", "Đánh Giá", "Mã Phòng", "MaKH", "MaNV", "NgayLapHD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThanhToan.setRowHeight(30);
        tblThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThanhToanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThanhToan);

        tabs.addTab("Hóa Đơn Thanh Toán", jScrollPane1);

        tblHDDV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblHDDV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaHD", "MaDV", "TenDV", "NgayDK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHDDV.setRowHeight(30);
        jScrollPane3.setViewportView(tblHDDV);

        tabs.addTab("Hóa Đơn Dịch Vụ", jScrollPane3);

        btnPhong.setText("...");
        btnPhong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhongActionPerformed(evt);
            }
        });

        btnKhachHang.setText("...");
        btnKhachHang.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhachHangActionPerformed(evt);
            }
        });

        btnReset.setText("Reset Combobox");
        btnReset.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnLoadThanhToan.setText("Load");
        btnLoadThanhToan.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnLoadThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadThanhToanActionPerformed(evt);
            }
        });

        btnDichVu.setText("ĐKDV");
        btnDichVu.setColor1(new java.awt.Color(26, 239, 246));
        btnDichVu.setColor2(new java.awt.Color(204, 153, 0));
        btnDichVu.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDichVuActionPerformed(evt);
            }
        });

        lblTienThanhToanPhong.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblTienThanhToanPhong.setText("Tiền Thanh Toán Phòng:");
        lblTienThanhToanPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtThanhToanPhong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtThanhToanPhong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtThanhToanPhongKeyReleased(evt);
            }
        });

        btnLoadTienThanhToanTong.setText("...");
        btnLoadTienThanhToanTong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLoadTienThanhToanTong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadTienThanhToanTongActionPerformed(evt);
            }
        });

        btnHDDV.setText("HDDV");
        btnHDDV.setColor1(new java.awt.Color(26, 239, 246));
        btnHDDV.setColor2(new java.awt.Color(204, 153, 0));
        btnHDDV.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnHDDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHDDVActionPerformed(evt);
            }
        });

        btnBill.setText("Xuất Bill");
        btnBill.setColor1(new java.awt.Color(51, 51, 51));
        btnBill.setColor2(new java.awt.Color(51, 51, 51));
        btnBill.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblMaKH)
                                .addGap(46, 46, 46)
                                .addComponent(cboMaKH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblMaPhong)
                                .addGap(18, 18, 18)
                                .addComponent(cboMaPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKhachHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtThanhToanPhong, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNgayThue)
                                    .addComponent(lblNgayTra))
                                .addGap(18, 18, 18)
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dtcNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dtcNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblDanhGia)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblMaNhanVien)
                                .addGap(46, 46, 46)
                                .addComponent(lblMaNV))
                            .addComponent(lblTienThanhToan)
                            .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnReset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBackgroundLayout.createSequentialGroup()
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblTienThanhToanPhong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLoadThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 86, Short.MAX_VALUE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(txtThanhToan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLoadTienThanhToanTong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(btnDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHDDV, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBill, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGap(30, 30, 30))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayThue)
                            .addComponent(dtcNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayTra)
                            .addComponent(dtcNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblDanhGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaPhong)
                            .addComponent(cboMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaKH)
                            .addComponent(cboMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaNhanVien)
                            .addComponent(lblMaNV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTienThanhToanPhong)
                            .addComponent(btnLoadThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addComponent(txtThanhToanPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTienThanhToan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoadTienThanhToanTong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimKiem)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHDDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(tabs)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền Thêm");
            return;
        }

        if(!validatee()){
            return;
        }
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không có quyền Cập Nhật");
            return;
        }
        if(!validatee()){
            return;
        }
        update();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if(Auth.isServe()){
            MsgBox.alert(this, "Phục vụ không được xóa !");
            return;
        }
        if(Auth.isReceptionist()){
            MsgBox.alert(this, "Lễ tân không được xóa !");
            return;
        }
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void tblThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThanhToanMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            this.row = tblThanhToan.getSelectedRow();
            edit();
        }
    }//GEN-LAST:event_tblThanhToanMouseClicked

    private void txtThanhToanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThanhToanKeyReleased
        // TODO add your handling code here:
        ChuyenDang(txtThanhToan);
    }//GEN-LAST:event_txtThanhToanKeyReleased

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhongActionPerformed
        // TODO add your handling code here
        new Phong_LoaiPhong_JDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnPhongActionPerformed

    private void btnKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhachHangActionPerformed
        // TODO add your handling code here:
        new KhachHangJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnKhachHangActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        if(ThongTinNhanh.checkPhong()){
           cboMaPhong.setSelectedItem(ThongTinNhanh.p);
        }
        if(ThongTinNhanh.checkKhachHang()){
            cboMaKH.setSelectedItem(ThongTinNhanh.kh);
        }
        fillComboboxMaPhong();
        fillComboboxMaKH();
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnLoadThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadThanhToanActionPerformed
        // TODO add your handling code here:
        loadTienThanhToan();       
    }//GEN-LAST:event_btnLoadThanhToanActionPerformed

    private void btnDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDichVuActionPerformed
        // TODO add your handling code here:
        new QuanLiDangKiDVJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnDichVuActionPerformed

    private void txtThanhToanPhongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThanhToanPhongKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThanhToanPhongKeyReleased

    private void btnLoadTienThanhToanTongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadTienThanhToanTongActionPerformed
        txtThanhToan.setText(txtThanhToanPhong.getText());
    }//GEN-LAST:event_btnLoadTienThanhToanTongActionPerformed

    private void btnHDDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHDDVActionPerformed
        // TODO add your handling code here:
        new HoaDonDichVuJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnHDDVActionPerformed

    private void btnBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillActionPerformed
        hd = dao.selectById(Integer.parseInt(lblTieuDe.getToolTipText()));
        bHeight = Double.valueOf(dao.selectMaHDTenDVGia(Integer.parseInt(lblTieuDe.getToolTipText())).size());
        //JOptionPane.showMessageDialog(rootPane, bHeight);
        
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setPrintable(new BillPrintable(),getPageFormat(pj));
        
        try {
            pj.print();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBillActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThanhToanJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThanhToanJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThanhToanJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThanhToanJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThanhToanJDialog dialog = new ThanhToanJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.violet.UI.Button btnBill;
    private com.violet.UI.Button btnCapNhat;
    private com.violet.UI.Button btnDichVu;
    private com.violet.UI.Button btnFirst;
    private com.violet.UI.Button btnHDDV;
    private com.violet.UI.Button btnKhachHang;
    private com.violet.UI.Button btnLast;
    private com.violet.UI.Button btnLoadThanhToan;
    private com.violet.UI.Button btnLoadTienThanhToanTong;
    private com.violet.UI.Button btnMoi;
    private com.violet.UI.Button btnNext;
    private com.violet.UI.Button btnPhong;
    private com.violet.UI.Button btnPrev;
    private com.violet.UI.Button btnReset;
    private com.violet.UI.Button btnThem;
    private javax.swing.JButton btnTimKiem;
    private com.violet.UI.Button btnXoa;
    private javax.swing.JComboBox<String> cboMaKH;
    private javax.swing.JComboBox<String> cboMaPhong;
    private com.toedter.calendar.JDateChooser dtcNgayThue;
    private com.toedter.calendar.JDateChooser dtcNgayTra;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDanhGia;
    private javax.swing.JLabel lblMaKH;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblMaPhong;
    private javax.swing.JLabel lblNgayThue;
    private javax.swing.JLabel lblNgayTra;
    private javax.swing.JLabel lblTienThanhToan;
    private javax.swing.JLabel lblTienThanhToanPhong;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHDDV;
    private javax.swing.JTable tblThanhToan;
    private javax.swing.JTextArea txtDanhGia;
    private javax.swing.JTextField txtThanhToan;
    private javax.swing.JTextField txtThanhToanPhong;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    
    public void init(){
        this.setLocationRelativeTo(null);
        tblThanhToan.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblThanhToan.getParent().setBackground(Color.WHITE);
        tblThanhToan.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblThanhToan.getColumnModel().getColumn(0).setMaxWidth(60);
        tblThanhToan.getColumnModel().getColumn(3).setMinWidth(100);
        tblThanhToan.getColumnModel().getColumn(5).setMaxWidth(90);
        tblThanhToan.getColumnModel().getColumn(5).setMinWidth(90);
        tblThanhToan.getColumnModel().getColumn(6).setMaxWidth(60);
        tblThanhToan.getColumnModel().getColumn(7).setMaxWidth(60);
        tblThanhToan.setAutoCreateRowSorter(true);
        
        tblHDDV.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblHDDV.getParent().setBackground(Color.WHITE);
        tblHDDV.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblHDDV.setAutoCreateRowSorter(true);
        
//        tblPhong.getTableHeader().setDefaultRenderer(new HeaderColor());
//        tblPhong.getParent().setBackground(Color.WHITE);
//        tblPhong.getTableHeader().setPreferredSize(new Dimension(40, 40));
//        tblPhong.setAutoCreateRowSorter(true);
        
        fillTable();
        fillComboboxMaPhong();
        fillComboboxMaKH();
        fillTableCTDV();
        //fillTablePhong();
        clearForm();
    }
    
    HoaDonThanhToanPhongDAO dao = new HoaDonThanhToanPhongDAO();
    PhongDAO dao2 = new PhongDAO();
    KhachHangDAO dao3 = new KhachHangDAO();
    ChiTietDichVuDAO dao4 = new ChiTietDichVuDAO();
    int row = -1;
    
    private void fillComboboxMaPhong(){
//        cboMaPhong.removeAllItems();
//        for(int i = 0; i < dao2.selectMaPhong().size(); i++){
//            cboMaPhong.addItem(String.valueOf(dao2.selectMaPhong().get(i)));
//        }
        cboMaPhong.removeAll();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaPhong.getModel();
        //model.removeAllElements();        
        List<Phong> list = dao2.selectAll();
        for(Phong p : list){
            model.addElement(p);
        }
    }
    
    private void fillComboboxMaKH(){
//        cboMaKH.removeAllItems();
//        for(int i = 0; i < dao3.selectMaKH().size(); i++){
//            cboMaKH.addItem(String.valueOf(dao3.selectMaKH().get(i)));
//        }
        cboMaPhong.removeAll();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaKH.getModel();
        //model.removeAllElements();
        List<KhachHang> list = dao3.selectAll();
        for(KhachHang kh : list){
            model.addElement(kh);
        }
    }
    
    private void updateStatus(){
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row >= tblThanhToan.getRowCount() - 1);

        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);
        //btnLoadThanhToan.setEnabled(!edit);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
    private void setForm(HoaDonThanhToanPhong hd){
        lblTieuDe.setToolTipText(String.valueOf(hd.getMaHD()));
        dtcNgayThue.setDate(hd.getNgayThue());
        dtcNgayTra.setDate(hd.getNgayTra());
        DecimalFormat format = new DecimalFormat("###,###,###");
        txtThanhToan.setText(new String(format.format(hd.getTienThanhToan())));
        txtDanhGia.setText(hd.getDanhGia());
        Phong p = dao2.selectById(hd.getMaPhong());
        if(p!=null){
            cboMaPhong.setSelectedItem(p);
        }
        KhachHang kh = dao3.selectById(hd.getMaKH());
        if(kh!=null){
            cboMaKH.setSelectedItem(kh);
        }
        lblMaNV.setText(hd.getMaNV());
    }
    
    private HoaDonThanhToanPhong getForm(){
        HoaDonThanhToanPhong hd = new HoaDonThanhToanPhong();
        hd.setMaHD(Integer.valueOf(lblTieuDe.getToolTipText().trim()));
        hd.setNgayThue(dtcNgayThue.getDate());
        hd.setNgayTra(dtcNgayTra.getDate());
        hd.setTienThanhToan(Integer.valueOf(chuyenlai(txtThanhToan.getText())));
        hd.setDanhGia(txtDanhGia.getText());
        Phong p = (Phong) cboMaPhong.getSelectedItem();
        hd.setMaPhong(p.getMaPhong());
        KhachHang kh = (KhachHang) cboMaKH.getSelectedItem();
        hd.setMaKH(kh.getMaKH());
        hd.setMaNV(lblMaNV.getText());
        return hd;
    }
    
    private void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblThanhToan.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            List<HoaDonThanhToanPhong> list = dao.selectByKeyword(keyword);
            DecimalFormat format = new DecimalFormat("###,###,###");
            for(HoaDonThanhToanPhong hd : list){
                model.addRow(new Object[]{hd.getMaHD()
                                        ,hd.getNgayThue()
                                        ,hd.getNgayTra()
                                        ,format.format(hd.getTienThanhToan())
                                        ,hd.getDanhGia()
                                        ,hd.getMaPhong()
                                        ,hd.getMaKH()
                                        ,hd.getMaNV()
                                        ,hd.getNgayLapHD()});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void fillTableCTDV(){
        DefaultTableModel model = (DefaultTableModel) tblHDDV.getModel();
        model.setRowCount(0);
        int a = 0;
        try {
            List<Object[]> list = dao4.selectAllvaTenDV();
            for(Object[] ctdv : list){
                model.addRow(new Object[]{
                            ctdv[0],
                            ctdv[1],
                            ctdv[2],
                            ctdv[3]
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Truy vấn thất bại");
        }
    }
//    private void fillTablePhong() {
//        DefaultTableModel model = (DefaultTableModel) tblPhong.getModel();
//        model.setRowCount(0);
//        try {
//            String keyword = txtTimKiem.getText();
//            List<Phong> list = dao2.selectByKeyword(keyword);
//            DecimalFormat format = new DecimalFormat("###,###,###");
//            for (Phong p : list) {
//                Object[] row = {
//                    p.getMaPhong(),
//                    p.getTenPhong(),
//                    format.format(p.getDonGia()),
//                    p.getMaLoai()
//                };
//                model.addRow(row);
//            }
//        } 
//        catch (Exception e) {
//            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
//            e.printStackTrace();
//        }
//    }
    private void clearForm(){
        HoaDonThanhToanPhong hd = new HoaDonThanhToanPhong();
        hd.setMaNV(Auth.user.getMaNV());
        hd.setNgayThue(XDate.now());
        this.setForm(hd);
        txtThanhToanPhong.setText("");
        this.row = -1;
        this.fillTable();
        this.fillTableCTDV();
        //this.fillTablePhong();
        this.updateStatus();
    }
    private void insert(){
        HoaDonThanhToanPhong hd = getForm();
        try {
            dao.insert(hd);
            HoaDonThanhToanPhong hdnew = getForm();            
            this.fillTable();
            hdnew.setMaHD(Integer.parseInt(tblThanhToan.getValueAt(tblThanhToan.getRowCount()-1, 0).toString()));
            ThongTinNhanh.hdttp = hdnew;
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công !");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại !");
        }
    }
    
    private void update(){
        HoaDonThanhToanPhong hd = getForm();
        try {
            dao.update(hd);
            this.fillTable();
            MsgBox.alert(this, "Cập nhật thành công !");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại !");
        }
        
    }
    
    private void delete() {
        String mahd = lblTieuDe.getToolTipText();
        try {
            dao.delete(Integer.valueOf(mahd));
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Xóa thành công !");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại !");
        }
    }
    private void edit(){
        Integer mahd = (Integer) tblThanhToan.getValueAt(this.row, 0);
        tblThanhToan.setRowSelectionInterval(this.row, this.row);
        HoaDonThanhToanPhong dv = dao.selectById(mahd);
        this.setForm(dv);
        this.loadTienThanhToan();
        this.updateStatus();
    }
    
    private void first(){
        this.row = 0;
        this.edit();
    }
    private void prev(){
        if(this.row>0){
            this.row--;
            this.edit();
        }
    }
    private void next(){
        if(this.row<tblThanhToan.getRowCount()-1){
            this.row++;
            this.edit();
        }
    }
    private void last(){
        this.row = tblThanhToan.getRowCount()-1;
        this.edit();
    }
    private void ChuyenDang(JTextField txt){
        if(txt.getText().equals("")){
            return;
        }
        try {
            String thanhtoan = txt.getText();
            String giadd = thanhtoan.replace(",", "");
            DecimalFormat format = new DecimalFormat("###,###,###");
            String so = format.format(Long.parseLong(giadd));
            txt.setText(so);
        } catch (Exception e) {
            //e.printStackTrace();
            MsgBox.alert(this, "Chỉ nhập số !");
        }
    }
    private String chuyenlai(String txtthanhtoan){
        try {
            String gia = txtthanhtoan;
            String giadd = gia.replace(",", "");
            return giadd;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    private boolean validatee(){
        if(dtcNgayThue.getDate()==null){
            dtcNgayThue.requestFocus();
            MsgBox.alert(this, "Vui lòng không để trống Ngày Thuê !");
            return false;
        }
        if(txtDanhGia.getText().trim().length() == 0){
            txtDanhGia.requestFocus();
            MsgBox.alert(this, "Vui lòng không để trống đánh giá !");
            return false;
        }
        return true;
    }
    private void loadTienThanhToan(){
        if(dtcNgayThue.getDate()==null){
            MsgBox.alert(null, "Chưa có ngày thuê nên không load được tiền thanh toán phòng!");
            return;
        }
        if(dtcNgayTra.getDate()==null){
            //MsgBox.alert(null, "Chưa có ngày trả nên không load được tiền thanh toán phòng!");
            txtThanhToanPhong.setText("0");
            return;
        }
        //tabs.setSelectedIndex(2);
        Phong p = (Phong) cboMaPhong.getSelectedItem();
        txtThanhToanPhong.setText(String.valueOf((int)dao.getGiaPhongThanhToan(dtcNgayThue.getDate(), dtcNgayTra.getDate(), p.getMaPhong())));
        ChuyenDang(txtThanhToanPhong);
    }
    //--------------------------------------------------------------------------
    Double bHeight=0.0;
//    Double totalAmount=0.0;
//    Double cash=0.0;
//    Double balance=0.0;

    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double bodyHeight = bHeight;
        double headerHeight = 5.0;
        double footerHeight = 5.0;
        double width = cm_to_pp(8);
        double height = cm_to_pp(headerHeight + bodyHeight + footerHeight);
        paper.setSize(width, height);
        paper.setImageableArea(0, 10, width, height - cm_to_pp(1));

        pf.setOrientation(PageFormat.PORTRAIT);
        pf.setPaper(paper);

        return pf;
    }
    protected static double cm_to_pp(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 72d;
    }
    HoaDonThanhToanPhong hd = null;
    DecimalFormat format = new DecimalFormat("###,###,###");
    public class BillPrintable implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                throws PrinterException {

            int r = dao.selectMaHDTenDVGia(Integer.parseInt(lblTieuDe.getToolTipText().toString().trim())).size();
            ImageIcon icon = new ImageIcon("src\\com\\violet\\icon\\LogoKhachSan.png");
            int result = NO_SUCH_PAGE;
            if (pageIndex == 0) {

                Graphics2D g2d = (Graphics2D) graphics;
                double width = pageFormat.getImageableWidth();
                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                //  FontMetrics metrics=g2d.getFontMetrics(new Font("Arial",Font.BOLD,7));
                try {
                    int y = 20;
                    int yShift = 10;
                    int headerRectHeight = 15;
                    // int headerRectHeighta=40;

                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawImage(icon.getImage(), 50, 20, 90, 30, rootPane);
                    y += yShift + 30;
                    g2d.drawString("-------------------------------------", 12, y);
                    y += yShift;
                    g2d.drawString("         VIOLET HOTEL        ", 12, y);
                    y += yShift;
                    g2d.drawString("   Hóa Đơn Thanh Toán Phòng  ", 12, y);
                    y += yShift;
                    g2d.drawString("     Thành phố Hồ Chí Minh   ", 12, y);
                    y += yShift;
                    g2d.drawString("   www.facebook.com/VioletHT ", 12, y);
                    y += yShift;
                    g2d.drawString("         +8400000000         ", 12, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 12, y);
                    y += headerRectHeight;

                    g2d.drawString(" Tên Dịch Vụ                  Giá    ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += headerRectHeight;

                    List<Object[]> list = thongtinBill(Integer.parseInt(lblTieuDe.getToolTipText()));
                    for (Object[] row : list) {
                        //MsgBox.alert(null, "Đúng");
                        g2d.drawString(" " + row[1].toString() + "                            ", 10, y);
                        y += yShift;
                        g2d.drawString("      " + '1' + " * " + row[2].toString(), 10, y);
                        String row2 = format.format(row[2]);
                        g2d.drawString(row2, 160, y);
                        y += yShift;

                    }
                    
                    g2d.drawString(" Tiền Phòng:                " + format.format(dao.getGiaPhongThanhToan(hd.getNgayThue(), hd.getNgayTra(), hd.getMaPhong())).toString() + "   ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString(" Tổng tiền phải thanh toán: " + format.format(dao.selectTongTienThanhToan(Integer.parseInt(lblTieuDe.getToolTipText()))).toString() + "   ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString(" Cash      :                " + format.format(dao.selectTongTienThanhToan(Integer.parseInt(lblTieuDe.getToolTipText()))).toString() + "   ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
//                    g2d.drawString(" Balance   :                 " + txtbalance.getText() + "   ", 10, y);
//                    y += yShift;

                    g2d.drawString("*************************************", 10, y);
                    y += yShift;
                    g2d.drawString("       THANK YOU COME AGAIN          ", 10, y);
                    y += yShift;
                    g2d.drawString("*************************************", 10, y);
                    y += yShift;
                    g2d.drawString("       SOFTWARE BY:VIOLETHOTEL       ", 10, y);
                    y += yShift;
                    g2d.drawString("   CONTACT: contact@violet.com       ", 10, y);
                    y += yShift;

                } catch (Exception e) {
                    e.printStackTrace();
                }

                result = PAGE_EXISTS;
            }
            return result;
        }
    }
    private List<Object[]> thongtinBill(int maHD){
        return dao.selectMaHDTenDVGia(maHD);
    }
}
