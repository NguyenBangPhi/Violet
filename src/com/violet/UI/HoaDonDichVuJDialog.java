/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.violet.UI;

import com.violet.DAO.ChiTietDichVuDAO;
import com.violet.DAO.DichVuDAO;
import com.violet.DAO.HoaDonThanhToanPhongDAO;
import com.violet.Entity.ChiTietDichVu;
import com.violet.Entity.DichVu;
import com.violet.Entity.HoaDonThanhToanPhong;
import com.violet.Help.HeaderColor;
import com.violet.Help.MsgBox;
import com.violet.Help.XDate;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.sql.Date;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class HoaDonDichVuJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HoaDonDichVuJDialog
     */
    public HoaDonDichVuJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblMaHD = new javax.swing.JLabel();
        lblMaDV = new javax.swing.JLabel();
        lblNgayDK = new javax.swing.JLabel();
        dtcNgayDK = new com.toedter.calendar.JDateChooser();
        lblTieuDe = new javax.swing.JLabel();
        btnCapNhat = new com.violet.UI.Button();
        btnXoa = new com.violet.UI.Button();
        btnMoi = new com.violet.UI.Button();
        btnFirst = new com.violet.UI.Button();
        btnLast = new com.violet.UI.Button();
        btnPrev = new com.violet.UI.Button();
        btnNext = new com.violet.UI.Button();
        cboMaHD = new javax.swing.JComboBox<>();
        cboMaDV = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHDDV = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDVTungHD = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblChiTiet = new javax.swing.JTable();
        lblTongTien = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Violet - HoaDonDichVu");

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblMaHD.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblMaHD.setText("MaHĐ:");
        lblMaHD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblMaDV.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblMaDV.setText("MaDV:");
        lblMaDV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblNgayDK.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblNgayDK.setText("NgayDK:");
        lblNgayDK.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        dtcNgayDK.setBackground(new java.awt.Color(255, 255, 255));
        dtcNgayDK.setDateFormatString("dd-MM-yyyy");
        dtcNgayDK.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(32, 136, 203));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("Hóa Đơn Dịch Vụ");
        lblTieuDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(32, 136, 203), 10));

        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/update.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.setColor2(new java.awt.Color(243, 243, 222));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/delete.png"))); // NOI18N
        btnXoa.setColor2(new java.awt.Color(243, 243, 222));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.setLabel("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/new.png"))); // NOI18N
        btnMoi.setColor2(new java.awt.Color(243, 243, 222));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMoi.setLabel("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.setColor1(new java.awt.Color(26, 239, 246));
        btnFirst.setColor2(new java.awt.Color(67, 29, 245));
        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.setColor1(new java.awt.Color(26, 239, 246));
        btnLast.setColor2(new java.awt.Color(67, 29, 245));
        btnLast.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.setColor1(new java.awt.Color(26, 239, 246));
        btnPrev.setColor2(new java.awt.Color(67, 29, 245));
        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.setColor1(new java.awt.Color(26, 239, 246));
        btnNext.setColor2(new java.awt.Color(67, 29, 245));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        cboMaHD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cboMaDV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tabs.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        tblHDDV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblHDDV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "MaHD", "MaDV", "NgayDK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHDDV.setRowHeight(30);
        tblHDDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDDVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHDDV);

        tabs.addTab("Tất cả hóa đơn", new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/all-apps.png")), jScrollPane1); // NOI18N

        tblDVTungHD.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblDVTungHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MaHD", "Tên Khách Hàng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDVTungHD.setRowHeight(30);
        tblDVTungHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDVTungHDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDVTungHD);

        tabs.addTab("Theo hóa đơn", new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/bill.png")), jScrollPane2); // NOI18N

        tblChiTiet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MADV", "Tên DV", "Giá", "Ngày DK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChiTiet.setRowHeight(30);
        tblChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblChiTiet);

        tabs.addTab("Chi tiết", new javax.swing.ImageIcon(getClass().getResource("/com/violet/icon/details.png")), jScrollPane3); // NOI18N

        lblTongTien.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lblTongTien.setText("Tổng tiền dịch vụ của hóa đơn này:");
        lblTongTien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaHD)
                            .addComponent(lblMaDV)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblNgayDK)))
                        .addGap(28, 28, 28)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtcNgayDK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboMaHD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboMaDV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(lblTongTien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTongTien)))
                .addGap(18, 18, 18)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaHD)
                            .addComponent(cboMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaDV)
                            .addComponent(cboMaDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNgayDK)
                            .addComponent(dtcNgayDK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTongTien)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        if(!validatee()){
            return;
        }
        update();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblHDDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDDVMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            this.row = tblHDDV.getSelectedRow();
            edit();
        }
    }//GEN-LAST:event_tblHDDVMouseClicked

    private void tblDVTungHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDVTungHDMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            int rowtemp = tblDVTungHD.getSelectedRow();
            fillTableChiTiet(Integer.parseInt(tblDVTungHD.getValueAt(rowtemp, 0).toString()));
            
            cboMaHD.setSelectedItem(dao2.selectById(Integer.parseInt(tblDVTungHD.getValueAt(rowtemp, 0).toString())));
            tabs.setSelectedIndex(2);
            cboMaHD.setEnabled(false);
        }
    }//GEN-LAST:event_tblDVTungHDMouseClicked

    private void tblChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            int rowtemp = tblChiTiet.getSelectedRow();
            DichVu dv = dao3.selectById(tblChiTiet.getValueAt(rowtemp, 0).toString());
            cboMaDV.setSelectedItem(dv);
            dtcNgayDK.setDate(XDate.toDate(tblChiTiet.getValueAt(rowtemp, 3).toString(), "dd-MM-yyyy"));
            cboMaDV.setEnabled(false);
        }
    }//GEN-LAST:event_tblChiTietMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonDichVuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonDichVuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonDichVuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonDichVuJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HoaDonDichVuJDialog dialog = new HoaDonDichVuJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.violet.UI.Button btnCapNhat;
    private com.violet.UI.Button btnFirst;
    private com.violet.UI.Button btnLast;
    private com.violet.UI.Button btnMoi;
    private com.violet.UI.Button btnNext;
    private com.violet.UI.Button btnPrev;
    private com.violet.UI.Button btnXoa;
    private javax.swing.JComboBox<String> cboMaDV;
    private javax.swing.JComboBox<String> cboMaHD;
    private com.toedter.calendar.JDateChooser dtcNgayDK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMaDV;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblNgayDK;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChiTiet;
    private javax.swing.JTable tblDVTungHD;
    private javax.swing.JTable tblHDDV;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    
    ChiTietDichVuDAO dao = new ChiTietDichVuDAO();
    HoaDonThanhToanPhongDAO dao2 = new HoaDonThanhToanPhongDAO();
    DichVuDAO dao3 = new DichVuDAO();
    int row = -1;
    
    public void init(){
        this.setLocationRelativeTo(null);
        tblHDDV.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblHDDV.getParent().setBackground(Color.WHITE);
        tblHDDV.getTableHeader().setPreferredSize(new Dimension(40, 40));  
        
        tblDVTungHD.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblDVTungHD.getParent().setBackground(Color.WHITE);
        tblDVTungHD.getTableHeader().setPreferredSize(new Dimension(40, 40));  
        
        tblChiTiet.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblChiTiet.getParent().setBackground(Color.WHITE);
        tblChiTiet.getTableHeader().setPreferredSize(new Dimension(40, 40)); 
        
        fillCombobox();
        fillCombobox2();
        fillTable();
        fillTableHD();
        txtTongTien.setEditable(false);
    }
    private void fillCombobox(){
//        cboMaHD.removeAllItems();
//        for(int i = 0; i < dao.selectMaHD().size(); i++){
//            cboMaHD.addItem(String.valueOf(dao.selectMaHD().get(i)));
//        }
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaHD.getModel();
        model.removeAllElements();
        List<HoaDonThanhToanPhong> list = dao2.selectAll();
        for(HoaDonThanhToanPhong ctdv : list){
            model.addElement(ctdv);
        }
    }
    private void fillCombobox2(){
//        cboMaDV.removeAllItems();
//        for(int i = 0; i < dao.selectMaDV().size();i++){
//            cboMaDV.addItem(dao.selectMaDV().get(i));
//        }
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaDV.getModel();
        model.removeAllElements();
        List<DichVu> list = dao3.selectAll();
        for(DichVu dv : list){
            model.addElement(dv);
        }
    }
    
    private void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblHDDV.getModel();
        model.setRowCount(0);
        int a = 0;
        try {
            List<ChiTietDichVu> list = dao.selectAll();
            for(ChiTietDichVu ctdv : list){
                model.addRow(new Object[]{
                            a+=1,
                            ctdv.getMaHD(),
                            ctdv.getMaDV(),
                            ctdv.getNgayDK()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Truy vấn thất bại");
        }
    }
    private void fillTableHD(){
        DefaultTableModel model = (DefaultTableModel) tblDVTungHD.getModel();
        model.setRowCount(0);
        try {
            List<Object[]> list = dao2.selectHDtrongCTDV();
            for(Object[] row : list){
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Truy vấn thất bại");
        }       
    }
    
    private void fillTableChiTiet(int maHD){
        DefaultTableModel model = (DefaultTableModel) tblChiTiet.getModel();
        model.setRowCount(0);
        try {
            DecimalFormat format = new DecimalFormat("###,###,###");
            List<Object[]> list = dao.selectMaDVTenDVGia(maHD);
            for(Object[] row : list){
                model.addRow(new Object[]{row[0],row[1],format.format(row[2]),XDate.toString(Date.valueOf(row[3].toString()), "dd-MM-yyyy")});
            }
            if(list!= null){
                double tongtien = 0;
                for(int i = 0; i< tblChiTiet.getRowCount();i++){
                    tongtien+= Integer.parseInt(chuyenlai(tblChiTiet.getValueAt(i, 2).toString()));
                }
                txtTongTien.setText(format.format(tongtien));
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Truy vấn thất bại");
        }
        
    }
    
    private void update(){
        ChiTietDichVu ctdv = getForm();
        try {
            dao.update(ctdv);
            fillTable();
            MsgBox.alert(this, "Cập nhật Thành công !");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Cập nhật thất bại !");
        }
    }
    
    private void delete(){
        ChiTietDichVu ctdv = getForm();
        try {
            dao2.updateTienThanhToan(ctdv.getMaHD(), dao2.selectGiaDV(ctdv.getMaDV())*(-1));
            dao.delete(ctdv.getMaHD(), ctdv.getMaDV());
            fillTable();            
            fillTableHD();
            if(tblChiTiet.getRowCount()==0){
                DefaultTableModel model = (DefaultTableModel) tblChiTiet.getModel();
                model.setRowCount(0);
            }else{
                fillTableChiTiet(ctdv.getMaHD());
            }
            MsgBox.alert(this, "Xóa thành công !");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Xóa thất bại !");
        }
    }
    
    private void updateStatus(){
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row >= tblHDDV.getRowCount() - 1);

        cboMaHD.setEnabled(!edit);
        cboMaDV.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
    private void setForm(ChiTietDichVu dv){     
        HoaDonThanhToanPhong hd = dao2.selectById(dv.getMaHD());
        if(hd != null){
            cboMaHD.setSelectedItem(hd);
        }
        DichVu dvcbo = dao3.selectById(dv.getMaDV());
        if(dvcbo != null){
            cboMaDV.setSelectedItem(dvcbo);
        }       
        dtcNgayDK.setDate(dv.getNgayDK());
    }
    
    private ChiTietDichVu getForm(){
        ChiTietDichVu hd = new ChiTietDichVu();
        HoaDonThanhToanPhong hdtt = (HoaDonThanhToanPhong) cboMaHD.getSelectedItem();
        //hd.setMaHD(Integer.valueOf(cboMaHD.getSelectedItem().toString()));
        hd.setMaHD(hdtt.getMaHD());
        DichVu dv = (DichVu) cboMaDV.getSelectedItem();
        //hd.setMaDV(cboMaDV.getSelectedItem().toString());
        hd.setMaDV(dv.getMaDV());
        hd.setNgayDK(dtcNgayDK.getDate());
        return hd;
    }
    
    private void edit(){
        Integer mahd = Integer.valueOf(tblHDDV.getValueAt(this.row, 1).toString().trim()) ;
        String madv = tblHDDV.getValueAt(this.row, 2).toString().trim();
        tblHDDV.setRowSelectionInterval(this.row, this.row);
        ChiTietDichVu dv = dao.selectById(mahd,madv);
        this.setForm(dv);    
        this.updateStatus();
    }
    
    private void first(){
        this.row = 0;
        this.edit();
    }
    private void prev(){
        if(this.row>0){
            this.row--;
            this.edit();
        }
    }
    private void next(){
        if(this.row<tblHDDV.getRowCount()-1){
            this.row++;
            this.edit();
        }
    }
    private void last(){
        this.row = tblHDDV.getRowCount()-1;
        this.edit();
    }
    
    private void clearForm(){
        ChiTietDichVu hd = new ChiTietDichVu();
        this.setForm(hd);
        this.row = -1;
        this.fillTable();
        this.fillTableHD();
        DefaultTableModel model = (DefaultTableModel) tblChiTiet.getModel();
        model.setRowCount(0);
        txtTongTien.setText("");
        this.updateStatus();
    }
    private boolean validatee(){
        if(dtcNgayDK.getDate()==null){
            MsgBox.alert(null, "Không được bỏ trống Ngày Đăng Kí !");
            return false;
        }
        return true;
    }
    private String chuyenlai(String txtthanhtoan){
        try {
            String gia = txtthanhtoan;
            String giadd = gia.replace(",", "");
            return giadd;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
